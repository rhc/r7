#!/usr/bin/env ruby
require 'gli'
require_relative '../lib/r7'

class App
  extend GLI::App

  program_desc 'Describe your application here'

  version R7::VERSION

  subcommand_option_handling :normal
  arguments :strict

  desc 'Describe some switch here'
  switch [:s,:switch]

  desc 'Describe some flag here'
  default_value 'the default'
  arg_name 'The name of the argument'
  flag [:f,:flagname]

  # desc 'Describe asset here'
  # arg_name 'Describe arguments to asset here'
  # command :asset do |c|
  #   c.desc 'Describe a switch to asset'
  #   c.switch :s

  #   c.desc 'Describe a flag to asset'
  #   c.default_value 'default'
  #   c.flag :f
  #   c.action do |global_options,options,args|

  #     # Your command logic here

  #     # If you have any errors, just raise them
  #     # raise "that command made no sense"

  #     puts "list assets"
  #   end
  # end

  desc 'Describe vulnerability here'
  arg_name 'Describe arguments to vulnerability here'
  command :vulnerability do |c|
    c.action do |global_options,options,args|
      puts "vulnerability command ran"
    end
  end

  desc 'Describe solution here'
  arg_name 'Describe arguments to solution here'
  command :solution do |c|
    c.action do |global_options,options,args|
      puts "solution command ran"
    end
  end

  pre do |global,command,options,args|
    # Pre logic here
    # Return true to proceed; false to abort and not call the
    # chosen command
    # Use skips_pre before a command to skip this block
    # on that command only
    true
  end

  post do |global,command,options,args|
    # Post logic here
    # Use skips_post before a command to skip this
    # block on that command only
  end

  on_error do |exception|
    # Error logic here
    # return false to skip default error handling
    true
  end
end

exit App.run(ARGV)
